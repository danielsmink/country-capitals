"use strict";function config(e){e.when("/",{templateUrl:"./js/partials/home/home.html"}).when("/countries",{templateUrl:"./js/partials/countries/countries.html",controller:"CountriesCtrl",controllerAs:"countries"}).when("/countries/:country/capital",{templateUrl:"./js/partials/country-detail/country-detail.html",controller:"CountryDetailCtrl",controllerAs:"country"}).when("/error",{template:"<p>Error Page Not Found</p>"}).otherwise({redirectTo:"/error"})}function CountriesCtrl(e,t,r,o){var n=this,a=o.get("countries");n.isLoading=!0,n.ordering="countryName",n.go=function(t){e.path(t)},a?(n.geonames=a,n.isLoading=!1):r.getCountries().success(function(e){o.put("countries",e.geonames),n.geonames=o.get("countries")},t(function(){n.isLoading=!1},1e3)).error(function(){n.error="Error retrieving country list"})}function CountryDetailCtrl(e,t,r,o,n){var a=this,i=t.country.split("-"),u=i[0],c=n.get(u);a.isLoading=!0,o.setIsoCode(u),a.detail={country:"",capital:"",neighbours:""},c?(a.detail=c,a.isLoading=!1):o.getCountry().success(function(t){0===t.geonames.length?a.error="Error retrieving country":(a.detail.country=t.geonames[0],o.getCapital(a.detail.country).success(function(e){0===e.geonames.length?(a.detail.capital={name:"No capital",population:"0"},n.put(u,a.detail)):(a.detail.capital=e.geonames[0],o.getNeighbours(a.detail.country.geonameId).success(function(e){a.detail.neighbours=e.geonames,n.put(u,a.detail)}).error(function(){a.error="Error retrieving neighbours"}))},e(function(){a.isLoading=!1},1e3)).error(function(){a.error="Error retrieving capital info"}))}).error(function(){a.error="Error retrieving country list"})}function geonamesCache(e){return e(name)}function geonamesService(e,t,r){function o(){return e({method:"JSONP",url:r+"/countryInfoJSON",params:{callback:"JSON_CALLBACK",username:t}})}function n(){return e({method:"JSONP",url:r+"/countryInfoJSON",params:{callback:"JSON_CALLBACK",username:t,country:s.isoCode}})}function a(o){return e({method:"JSONP",url:r+"/searchJSON",params:{callback:"JSON_CALLBACK",username:t,q:o.capital,country:s.isoCode,name_equals:o.capital,isNameRequired:!0}})}function i(o){return e({method:"JSONP",url:r+"/neighboursJSON",params:{callback:"JSON_CALLBACK",username:t,geonameId:o}})}function u(e){s.isoCode=e}var c="",s={getCountries:o,getCountry:n,getCapital:a,getNeighbours:i,isoCode:c,setIsoCode:u};return s}angular.module("countryCapitals.config",[]).constant("geoApiUsername","danielsmink").constant("apiBaseUrl","http://api.geonames.org/"),angular.module("countryCapitals",["ngRoute","ngAnimate","countryCapitals.config"]),angular.module("countryCapitals").config(config),config.$inject=["$routeProvider"],angular.module("CountriesCtrl",CountriesCtrl),CountriesCtrl.$inject=["$location","$timeout","geonamesService","geonamesCache"],angular.module("CountryDetailCtrl",CountryDetailCtrl),CountryDetailCtrl.$inject=["$timeout","$routeParams","$location","geonamesService","geonamesCache"],angular.module("countryCapitals").factory("geonamesCache",geonamesCache),geonamesCache.$inject=["$cacheFactory"],angular.module("countryCapitals").factory("geonamesService",geonamesService),geonamesService.$inject=["$http","geoApiUsername","apiBaseUrl"];
//# sourceMappingURL=country-capitals.min.js.map